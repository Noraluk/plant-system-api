// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/controllers/health/interface/health.go

// Package mock_healthctlritf is a generated GoMock package.
package mock_healthctlritf

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v4 "github.com/labstack/echo/v4"
)

// MockHealthController is a mock of HealthController interface.
type MockHealthController struct {
	ctrl     *gomock.Controller
	recorder *MockHealthControllerMockRecorder
}

// MockHealthControllerMockRecorder is the mock recorder for MockHealthController.
type MockHealthControllerMockRecorder struct {
	mock *MockHealthController
}

// NewMockHealthController creates a new mock instance.
func NewMockHealthController(ctrl *gomock.Controller) *MockHealthController {
	mock := &MockHealthController{ctrl: ctrl}
	mock.recorder = &MockHealthControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthController) EXPECT() *MockHealthControllerMockRecorder {
	return m.recorder
}

// GetHealth mocks base method.
func (m *MockHealthController) GetHealth(c v4.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealth", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetHealth indicates an expected call of GetHealth.
func (mr *MockHealthControllerMockRecorder) GetHealth(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealth", reflect.TypeOf((*MockHealthController)(nil).GetHealth), c)
}
